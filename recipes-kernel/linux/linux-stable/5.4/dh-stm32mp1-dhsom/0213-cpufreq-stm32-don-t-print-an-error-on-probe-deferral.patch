From e8393c12c8d01b2cd563a15584c7283d65b5f834 Mon Sep 17 00:00:00 2001
From: Pascal Paillet <p.paillet@st.com>
Date: Tue, 25 Feb 2020 10:45:09 +0100
Subject: [PATCH 213/214] cpufreq: stm32: don't print an error on probe
 deferral

Do not print an error trace when deferring probe.

Upstream-Status: Denied Downstream stm32-gh v5.4-stm32mp [bd6e1eea6b11ca1c08b1e8136dd5a9230e678619]
Signed-off-by: Pascal Paillet <p.paillet@st.com>
Change-Id: I8495887aa5b1e52e57cc3d0b983b11fc7c5a85e2
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/159112
Reviewed-by: CITOOLS <smet-aci-reviews@lists.codex.cro.st.com>
Reviewed-by: CIBUILD <smet-aci-builds@lists.codex.cro.st.com>
Reviewed-by: Alexandre TORGUE <alexandre.torgue@st.com>
---
 drivers/cpufreq/stm32-cpufreq.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/cpufreq/stm32-cpufreq.c b/drivers/cpufreq/stm32-cpufreq.c
index f4a41e01a8b5..35fb3520d48d 100644
--- a/drivers/cpufreq/stm32-cpufreq.c
+++ b/drivers/cpufreq/stm32-cpufreq.c
@@ -54,7 +54,9 @@ static int stm32_cpufreq_probe(struct platform_device *pdev)
 	priv->opps = dev_pm_opp_set_supported_hw(cpu_dev, &supported_hw, 1);
 	if (IS_ERR(priv->opps)) {
 		ret = PTR_ERR(priv->opps);
-		dev_err(&pdev->dev, "Failed to set supported opp: %d\n", ret);
+		if (ret != -EPROBE_DEFER)
+			dev_err(&pdev->dev, "Failed to set supported opp: %d\n",
+				ret);
 		return ret;
 	}
 
-- 
2.30.2

