From f9ec169f684e2cd3c8192a35ed9798fe5a551348 Mon Sep 17 00:00:00 2001
From: Marek Vasut <marex@denx.de>
Date: Fri, 4 Dec 2020 02:57:11 +0100
Subject: [PATCH] Input: ili210x - Implement pressure reporting for ILI251x

The ILI251x seems to report pressure information in the 5th byte of
each per-finger touch data element. On the available hardware, this
information has the values ranging from 0x0 to 0xa, which is also
matching the downstream example code. Report pressure information
on the ILI251x.

Upstream-Status: Submitted [https://patchwork.kernel.org/project/linux-input/patch/20201224071238.160098-1-marex@denx.de/]
Signed-off-by: Marek Vasut <marex@denx.de>
Cc: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Cc: Henrik Rydberg <rydberg@bitmath.org>
Cc: Olivier Sobrie <olivier@sobrie.be>
Cc: Philipp Puschmann <pp@emlix.com>
To: linux-input@vger.kernel.org
---
 drivers/input/touchscreen/ili210x.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/input/touchscreen/ili210x.c b/drivers/input/touchscreen/ili210x.c
index f4ebdab06280..c556c3cd95be 100644
--- a/drivers/input/touchscreen/ili210x.c
+++ b/drivers/input/touchscreen/ili210x.c
@@ -120,7 +120,8 @@ static bool ili210x_touchdata_to_coords(struct ili210x *priv, u8 *touchdata,
 
 static bool ili251x_touchdata_to_coords(struct ili210x *priv, u8 *touchdata,
 					unsigned int finger,
-					unsigned int *x, unsigned int *y)
+					unsigned int *x, unsigned int *y,
+					unsigned int *z)
 {
 	if (finger >= ILI251X_TOUCHES)
 		return false;
@@ -132,6 +133,8 @@ static bool ili251x_touchdata_to_coords(struct ili210x *priv, u8 *touchdata,
 	*x &= 0x3fff;
 	*y = get_unaligned_be16(touchdata + 1 + (finger * 5) + 2);
 
+	*z = touchdata[1 + (finger * 5) + 4];
+
 	return true;
 }
 
@@ -140,7 +143,7 @@ static bool ili210x_report_events(struct ili210x *priv, u8 *touchdata)
 	struct input_dev *input = priv->input;
 	int i;
 	bool contact = false, touch = false;
-	unsigned int x = 0, y = 0;
+	unsigned int x = 0, y = 0, z = 0;
 
 	for (i = 0; i < priv->max_touches; i++) {
 		if (priv->model == MODEL_ILI210X) {
@@ -148,7 +151,7 @@ static bool ili210x_report_events(struct ili210x *priv, u8 *touchdata)
 							    i, &x, &y);
 		} else if (priv->model == MODEL_ILI251X) {
 			touch = ili251x_touchdata_to_coords(priv, touchdata,
-							    i, &x, &y);
+							    i, &x, &y, &z);
 			if (touch)
 				contact = true;
 		}
@@ -159,6 +162,8 @@ static bool ili210x_report_events(struct ili210x *priv, u8 *touchdata)
 			continue;
 		touchscreen_report_pos(input, &priv->prop, x, y,
 				       true);
+		if (priv->model == MODEL_ILI251X)
+			input_report_abs(input, ABS_MT_PRESSURE, z);
 	}
 
 	input_mt_report_pointer_emulation(input, false);
@@ -333,6 +338,8 @@ static int ili210x_i2c_probe(struct i2c_client *client,
 	/* Multi touch */
 	input_set_abs_params(input, ABS_MT_POSITION_X, 0, 0xffff, 0, 0);
 	input_set_abs_params(input, ABS_MT_POSITION_Y, 0, 0xffff, 0, 0);
+	if (model == MODEL_ILI251X)
+		input_set_abs_params(input, ABS_MT_PRESSURE, 0, 0xa, 0, 0);
 	touchscreen_parse_properties(input, true, &priv->prop);
 
 	error = input_mt_init_slots(input, priv->max_touches, INPUT_MT_DIRECT);
-- 
2.29.2

